Instructions to run the assignment:

sudo ./run.sh (Does the test at .97 threshold and for 3 iterations)

Answers to quiz questions:


1) Briefly describe two key/qualitative differences between Mininet and the actual hardware setup for the buffer sizing experiment. (Stating obvious ones like “Mininet is software, but hardware is hardware” will not earn you any points!)

For Mininet, we put the delay on the host links and did not put any delay on the bottleneck links. This is manageable for the simulation since the RTT will take the same amount of time; however, in the actual hardware setup, the propagation delay will be spread out evenly among the host links and network link depending on the length of each link.

Also, Mininet is a simulated experiment; therefore, it does not have some of the irregularities of an actual hardware setup. 

2) In the binary search algorithm, we adjust the buffer size while the flows are running. How long will it take for the TCP flows to adjust their windows when the buffer size is reduced to half its value?

RTT ratio??

3) In the experimental setup, we use a modified iperf because it is hard to establish new connections after long lived TCP flows have started. Why is it so?

New connections will have to start in slow start, but since the network is congested, it will immediately exit slow start and enter congestion avoidance. The existing flows will thus have much larger congestion windows, while the newer flows will start with smaller congestion windows and have trouble becoming larger. Thus it will take much longer for the flows to reach a steady state.

4) Look at the plot of cwnd and buffer occupancy for N=1 flow. Based on your understanding of TCP and the buffer sizing paper, explain why you need buffering at the bottleneck switch. For N=1 flow, what is the minimum amount of buffering required to keep the bottleneck link 100% utilized? Why?

If we do not buffer at the bottleneck switch, then we would drop packets since the host links have a greater rate than the network link. For N=1 flow, we need a buffer of RTT x C packets. This with the congestion control algorithms keep the bottleneck links 100% utilized.

5) What happens to cwnd and minimum required buffer size as you increase N? Why?

For our experiements, cwnd peaks higher and then levels at a higher value when N increases. Minimum required buffer size decreases as N increases. Because we have more flows, the packets from these various flows keep the link utilized (especially when other flows reduce the cwnd due to congestion control) diminishing the need for a larger buffer.

6) Describe potential hurdles when using Mininet to reproduce research results. How can this knowledge guide you when choosing a research project for the next programming assignment?

Mininet is a simulation using the system's resources. Mininet can only do as much as the underlying system can as well. For example, using the c1.medium instance was not sufficient for running these simulations and we needed to use the c1.xlarge instance to have sufficient processing power. We have to be sure that if we are doing stress tests for our research project our instance can handle the workload, so our results are as accurate as possible.

Assessment:

I ran the tests using a variety of threshold values and using both the avg and median rates during the binary search. I've kept the result.png graphs for these tests in the graphs folder. For threshold values of 0.98 and above, the result was not very accurate as seen by some points on the flow with high N value as well as a large queue size when the min required buffer size should have been very small. 0.97 seemed was more tolerant to noise, but because this value was more tolerant, it shows in the graph that the plot is slightly below the expected curve. The plots with threshold of 0.96 were a bit lower than 0.97 again because we were more lenient on what was an acceptable min required buffer size. For both median and avg, the results of the plots were about the same. If we had 1 value that was significantly affected by noise, median provided a better value, but for the most part, the results were relatively similar.